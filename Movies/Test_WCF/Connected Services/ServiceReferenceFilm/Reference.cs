//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Test_WCF.ServiceReferenceFilm {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceFilm.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMovieByIdActor", ReplyAction="http://tempuri.org/IService1/GetMovieByIdActorResponse")]
        DTO.MovieDTO[] GetMovieByIdActor(int idActor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMovieByIdActor", ReplyAction="http://tempuri.org/IService1/GetMovieByIdActorResponse")]
        System.Threading.Tasks.Task<DTO.MovieDTO[]> GetMovieByIdActorAsync(int idActor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFavoriteFilms", ReplyAction="http://tempuri.org/IService1/GetFavoriteFilmsResponse")]
        DTO.LightMovieDTO[] GetFavoriteFilms();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFavoriteFilms", ReplyAction="http://tempuri.org/IService1/GetFavoriteFilmsResponse")]
        System.Threading.Tasks.Task<DTO.LightMovieDTO[]> GetFavoriteFilmsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacterByIdActorAndIdFilm", ReplyAction="http://tempuri.org/IService1/GetCharacterByIdActorAndIdFilmResponse")]
        DTO.CharacterDTO[] GetCharacterByIdActorAndIdFilm(int actorId, int MovieId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCharacterByIdActorAndIdFilm", ReplyAction="http://tempuri.org/IService1/GetCharacterByIdActorAndIdFilmResponse")]
        System.Threading.Tasks.Task<DTO.CharacterDTO[]> GetCharacterByIdActorAndIdFilmAsync(int actorId, int MovieId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindXMoviesByPartialActorName", ReplyAction="http://tempuri.org/IService1/FindXMoviesByPartialActorNameResponse")]
        DTO.MovieDTO[] FindXMoviesByPartialActorName(string name, int nbElm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindXMoviesByPartialActorName", ReplyAction="http://tempuri.org/IService1/FindXMoviesByPartialActorNameResponse")]
        System.Threading.Tasks.Task<DTO.MovieDTO[]> FindXMoviesByPartialActorNameAsync(string name, int nbElm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertCommentOnActorId", ReplyAction="http://tempuri.org/IService1/InsertCommentOnActorIdResponse")]
        void InsertCommentOnActorId(int actorId, DTO.CommentDTO commentDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertCommentOnActorId", ReplyAction="http://tempuri.org/IService1/InsertCommentOnActorIdResponse")]
        System.Threading.Tasks.Task InsertCommentOnActorIdAsync(int actorId, DTO.CommentDTO commentDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetActorById", ReplyAction="http://tempuri.org/IService1/GetActorByIdResponse")]
        DTO.FullActorDTO GetActorById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetActorById", ReplyAction="http://tempuri.org/IService1/GetActorByIdResponse")]
        System.Threading.Tasks.Task<DTO.FullActorDTO> GetActorByIdAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Test_WCF.ServiceReferenceFilm.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Test_WCF.ServiceReferenceFilm.IService1>, Test_WCF.ServiceReferenceFilm.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DTO.MovieDTO[] GetMovieByIdActor(int idActor) {
            return base.Channel.GetMovieByIdActor(idActor);
        }
        
        public System.Threading.Tasks.Task<DTO.MovieDTO[]> GetMovieByIdActorAsync(int idActor) {
            return base.Channel.GetMovieByIdActorAsync(idActor);
        }
        
        public DTO.LightMovieDTO[] GetFavoriteFilms() {
            return base.Channel.GetFavoriteFilms();
        }
        
        public System.Threading.Tasks.Task<DTO.LightMovieDTO[]> GetFavoriteFilmsAsync() {
            return base.Channel.GetFavoriteFilmsAsync();
        }
        
        public DTO.CharacterDTO[] GetCharacterByIdActorAndIdFilm(int actorId, int MovieId) {
            return base.Channel.GetCharacterByIdActorAndIdFilm(actorId, MovieId);
        }
        
        public System.Threading.Tasks.Task<DTO.CharacterDTO[]> GetCharacterByIdActorAndIdFilmAsync(int actorId, int MovieId) {
            return base.Channel.GetCharacterByIdActorAndIdFilmAsync(actorId, MovieId);
        }
        
        public DTO.MovieDTO[] FindXMoviesByPartialActorName(string name, int nbElm) {
            return base.Channel.FindXMoviesByPartialActorName(name, nbElm);
        }
        
        public System.Threading.Tasks.Task<DTO.MovieDTO[]> FindXMoviesByPartialActorNameAsync(string name, int nbElm) {
            return base.Channel.FindXMoviesByPartialActorNameAsync(name, nbElm);
        }
        
        public void InsertCommentOnActorId(int actorId, DTO.CommentDTO commentDTO) {
            base.Channel.InsertCommentOnActorId(actorId, commentDTO);
        }
        
        public System.Threading.Tasks.Task InsertCommentOnActorIdAsync(int actorId, DTO.CommentDTO commentDTO) {
            return base.Channel.InsertCommentOnActorIdAsync(actorId, commentDTO);
        }
        
        public DTO.FullActorDTO GetActorById(int id) {
            return base.Channel.GetActorById(id);
        }
        
        public System.Threading.Tasks.Task<DTO.FullActorDTO> GetActorByIdAsync(int id) {
            return base.Channel.GetActorByIdAsync(id);
        }
    }
}
